@model ProjectPool.Models.CreateProjectModel

@{
    ViewData["Title"] = "Edit Project | ProjectPooL.";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <!-- CSS -->
    @*<link rel="stylesheet" href="~/css/NavProfile.css">*@
    <link rel="stylesheet" href="~/css/texteditor/site.css">
    <link rel="stylesheet" href="~/css/texteditor/richtext.min.css">
    <link rel="stylesheet" href="~/css/CreateProject.css">
    <link rel="stylesheet" href="~/css/taginput/tagify.css">

    <!-- Font -->
    <link href='https://fonts.googleapis.com/css?family=Jost' rel='stylesheet'>
    <!-- Icon -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" referrerpolicy="no-referrer">
    <!-- <link rel="stylesheet" href="//use.fontawesome.com/releases/v5.0.7/css/all.css"> -->


    <style>
    </style>
</head>
<body>


    @*<div class="main-body">
        *@
        <div class="content">
            <div class="col-12">
                <div class="text-black font-weight-bold create-project">Edit Project</div>
            </div>
            @*@using (Html.BeginForm("CreateProject", "ProjectController"))
            {*@
        <form asp-action="EditActiveProject">
            @Html.ValidationSummary(true)

            <!-- hidden field -->
            <input hidden id="ProjectID" name="ProjectID" asp-for="ProjectID" />
            <input hidden id="EmployerID" name="EmployerID" asp-for="EmployerID" />
            <input hidden id="Status" name="Status" asp-for="Status" />

            <div class="page col-12">
                <div class="field title">
                    <div class="label">Project Title</div>
                    @Html.TextAreaFor(model => model.Title, new { @id = "project-textarea" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "validation" })
                    @*<textarea asp-for="Title" maxlength="80" cols="2" id="project-textarea"></textarea>*@
                    @*<span class="validation-title" style="float: left;">This field is required</span>*@
                    <div id="counter" style="float: right;">
                        <span id="current-title">0</span>
                        <span id="maximum-title">/ 50</span>
                    </div>
                </div>
                <br>
                <div class="field title">
                    <div class="label">Brief Description</div>
                    @Html.TextAreaFor(model => model.Description, new { @id = "desc-textarea", maxlength = 300 })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "validation" })
                    @*<textarea asp-for="Title" maxlength="80" cols="2" id="project-textarea"></textarea>*@
                    @*<span class="validation-title" style="float: left;">This field is required</span>*@
                    <div id="counter-desc" style="float: right;">
                        <span id="current-desc">0</span>
                        <span id="maximum-desc">/ 300</span>
                    </div>
                </div>
                <br />
                <div class="field">
                    <div class="label">Project Scope</div>
                    @Html.TextAreaFor(model => model.Scope, new { @id = "project-scope" })
                    @*<textarea asp-for="Description" cols="2" id="project-desc" required></textarea>*@
                    @Html.ValidationMessageFor(model => model.Scope, "", new { @class = "validation" })
                    <span hidden class="validation-desc" style="float: left;">This field is required</span>
                </div>
                <br />
                <div class="field">
                    <div class="label">Category</div>
                    @{
                        List<SelectListItem>
                            CatlistItems = new List<SelectListItem>
                                ();
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Programming & Tech",
                            Value = "1"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Graphic & Design",
                            Value = "2"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Sales & Marketing",
                            Value = "3"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Video & Animation",
                            Value = "4"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Writing & Translation",
                            Value = "5"
                        });
                    }

                    @Html.DropDownListFor(model => model.CategoryID, CatlistItems, "-- Select Category --", new { @id = "main-category", @class = "category" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "validation" })
                    @*<span class="validation-cat" style="float: left;">asd</span>*@
                </div>
                <br>
                <div class="field">
                    <div class="label">Sub-Category</div>
                    <select class="category" id="sub-category">
                        <option value="">-- Select Sub Category --</option>
                    </select>

                    <!--Programming-->
                    <select class="category hide-submenu" id="sub-category-1" hidden>
                        <option value="Website">Website</option>
                        <option value="Mobile App">Mobile App</option>
                        <option value="Web mobile">Web mobile</option>
                        <option value="Wordpress">Wordpress</option>
                        <option value="Game development">Game development</option>
                    </select>
                    <!--Graphic-->
                    <select class="category hide-submenu" id="sub-category-2" hidden>
                        <option value="Illustration">Illustration</option>
                        <option value="Logo design">Logo design</option>
                        <option value="Card design">Card design</option>
                        <option value="UI/UX design">UI/UX design</option>
                        <option value="Fonts & Typography">Fonts & Typography</option>
                    </select>
                    <!--sales marketing-->
                    <select class="category hide-submenu" id="sub-category-3" hidden>
                        <option value="Data entry">Data entry</option>
                        <option value="Social media campaign">Social media campaign</option>
                        <option value="Adwords campaign">Adwords campaign</option>
                        <option value="Other">Other</option>
                    </select>
                    <!--video animation-->
                    <select class="category hide-submenu" id="sub-category-4" hidden>
                        <option value="Ads & Commercial">Ads & Commercial</option>
                        <option value="Video editing">Video editing</option>
                        <option value="Animated GIFs">Animated GIFs</option>
                        <option value="Logo animation">Logo animation</option>
                        <option value="Character animation">Character animation</option>
                    </select>
                    <!--writing -->
                    <select class="category hide-submenu" id="sub-category-5" hidden>
                        <option value="Translation">Translation</option>
                        <option value="Book Writing">Book Writing</option>
                        <option value="Scriptwriting">Scriptwriting</option>
                        <option value="Content writing">Content writing</option>
                        <option value="Article and blog posts">Article and blog posts</option>
                    </select>

                    @*<select asp-for="SubCategoryName" class="category" id="sub-category">
                <option value="">Select Sub Category</option>
            </select>*@
                    <input hidden id="SubCategoryName" name="SubCategoryName" asp-for="SubCategoryName" />
                    @*@Html.HiddenFor(model => model.SubCategoryName)*@
                    @Html.ValidationMessageFor(model => model.SubCategoryName, "", new { @class = "validation" })
                </div>
                <br>
                <div class="field">
                    <div class="label">Project Duration</div>
                    <div class="duration">
                        @{
                            List<SelectListItem>
                                DurationlistItems = new List<SelectListItem>
                                    ();
                            DurationlistItems.Add(new SelectListItem
                            {
                                Text = "0-3 months",
                                Value = "0 - 3 months"
                            });
                            DurationlistItems.Add(new SelectListItem
                            {
                                Text = "3-6 months",
                                Value = "3 - 6 months"
                            });
                            DurationlistItems.Add(new SelectListItem
                            {
                                Text = "6-12 months",
                                Value = "6 - 12 months"
                            });
                            DurationlistItems.Add(new SelectListItem
                            {
                                Text = "Not Specified",
                                Value = "Not Specified"
                            });
                        }
                        @Html.DropDownListFor(model => model.Duration, DurationlistItems, "-- Select Duration --", new { @id = "duration", @class = "category" })
                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "validation" })

                        <!--<div class="duration-grp from-right">
            <div class="label">From</div>
            <div class="from">
                Html.TextBoxFor(model => model.DurationFrom, new { type = "number", class = "input-duration" })
                Html.ValidationMessageFor(model => model.DurationFrom, "", new { class = "validation" })-->
                        @*<span class="validation-desc" style="float: left;">asd</span>*@
                        <!--</div>
            </div>
            <div class="duration-grp">
                <div class="label">To</div>
                <div class="to">
                    Html.TextBoxFor(model => model.DurationTo, new { type = "number", class = "input-duration" })
                    Html.ValidationMessageFor(model => model.DurationTo, "", new { class = "validation" })-->
                        @*<span class="validation-desc" style="float: left;">asd</span>*@
                        <!--</div>
            </div>-->
                    </div>

                </div>
                <br>
                <div class="field">
                    <div class="label">Required Skill</div>
                    @Html.TextAreaFor(model => model.Skill, new { @class = "skill-tag" })
                    @*<textarea class="skill-tag">CSS, HTML, PHP, jQuery</textarea>*@
                    @Html.ValidationMessageFor(model => model.Skill, "", new { @class = "validation" })
                </div>
                <div class="field">
                    <div class="label"> Required Language</div>
                    @Html.TextAreaFor(model => model.Language, new { @class = "language-tag" })
                    @*<textarea class="language-tag">English, Chinese</textarea>*@
                    @Html.ValidationMessageFor(model => model.Language, "", new { @class = "validation" })
                </div>
                <div class="field">
                    <div class="label">Project Cost (RM)</div>
                    @Html.TextBoxFor(model => model.Cost, new { type = "number", @class = "project-cost" })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "validation" })
                    @*<span class="validation-desc" style="float: left;">asd</span>*@
                </div>
                <br /><br />
                <div class="field btns">
                    @*<button class="prev-5 prev" onclick="location.href='@Url.Action("EmpActive", "EmployerDashboard" )'">Back to List</button>*@
                    <button class="Save">Save</button>
                </div>
                <br />
            </div>
        </form>
            <div>
                <a asp-action="EmpActive">Back to List</a>
            </div>
            @*}*@
        </div>

        @*
    </div>*@

    <!-- Script -->
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>

    <script src="~/script/jquery.richtext.js"></script>
    <script src="~/script/tagify.min.js"></script>
    <script>
        $("#project-scope").richText({
            maxlength: 800,
            height: 200,
            leftAlign: false,
            centerAlign: false,
            rightAlign: false,
            justify: false,
            heading: false,
            fonts: false,
            fontColor: false,
            fontSize: false,
            imageUpload: false,
            fileUpload: false,
            videoEmbed: false,
            urls: false,
            table: false,
            removeStyles: false,
            preview: false,
        });

        $(document).ready(function () {
            

            // });

            $("#project-textarea").keyup(function () {

                var character = $(this).val();
                var withOutSpace = character.replace(/\s+/g, '').length,
                    current = $('#current-title');
                maximum = $('#maximum-title');
                theCount = $('#the-count');



                current.text(withOutSpace);

                if (withOutSpace > 49) {
                    maximum.css('color', '#841c1c');
                    current.css('color', '#841c1c');
                }
                else {
                    current.css('color', 'black');
                    maximum.css('color', 'black');
                }

            });

            $("#desc-textarea").keyup(function () {

                var character = $(this).val();
                var withOutSpace = character.replace(/\s+/g, '').length,
                    current = $('#current-desc');
                var length = character.length;
                maximum = $('#maximum-desc');
                theCount = $('#the-count');



                current.text(length);

                if (length > 299) {
                    maximum.css('color', '#841c1c');
                    current.css('color', '#841c1c');
                }
                else {
                    current.css('color', 'black');
                    maximum.css('color', 'black');
                }

            });


            //Tag input
            var skill_input = document.querySelector('.skill-tag')
            var arr = ["Javascript", "JQuery", "PHP", "MySQL", "Ruby", "HTML ", "CSS", "C++", "Java", "Python", "React", "C#", "APA MySQL"];
            var tagify = new Tagify(skill_input, {
                enforceWhitelist: true,
                maxTags: 7,
                editTags: false,
                whitelist: arr,
                originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(',')
            })


            var lang_input = document.querySelector('.language-tag');
            var desc = document.querySelector('#project-desc');

            var tagify = new Tagify(lang_input, {
                enforceWhitelist: true,
                maxTags: 3,
                editTags: false,
                whitelist: ["English", "Chinese", "Malay", "Japanese", "Korean", "Tamil", "Spanish", "Hokkien"],
                originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(',')
            })

            //Sub category change based on category
            $(function () {
                
                var num = $('#main-category').val();
                //console.log(num);
                $("#sub-category").hide();
                $("#sub-category-" + num).show();
                var value = $("#SubCategoryName").val();
                $("#sub-category-" + num).val(value).change();
                $(".hide-submenu").find(":selected").attr("selected", "selected");

                $('#main-category').change(function () {
                    var id = $('#main-category').val();
                    $(".hide-submenu").hide();
                    $("#sub-category").hide();
                    $("#sub-category-" + id).show();
                    
                    console.log(id);
                    console.log("clicked");

                    if ($("#main-category option:selected").val() == '') {
                        $("#sub-category").show();
                    }

                    $("#sub-category-" + id).change(function () {
                        console.log("changed");
                        $("#SubCategoryName").val($("#sub-category-" + id + " option:selected").text());
                        console.log($("#sub-category-" + id + " option:selected").text())
                        $('.hide-submenu option[selected]').removeAttr("selected");
                        $(".hide-submenu").find(":selected").attr("selected", "selected");
                        //$("#sub-category").attr("value", $("#sub-category option:selected").text());
                    })
 
                });

                $("#sub-category-" + id).change(function () {
                    //console.log("changed")
                    $("#SubCategoryName").val($("#sub-category-" + num + " option:selected").text());
                    //console.log($("#sub-category-" + num + " option:selected").text())
                    $('.hide-submenu option[selected]').removeAttr("selected");
                    $(".hide-submenu").find(":selected").attr("selected", "selected");
                    //$("#sub-category").attr("value", $("#sub-category option:selected").text());
                })
            })

            $(".submit").on("click", function () {
                if ($("#project-textarea").val() == "" || $("#project-textarea").val() == null || $("#project-textarea").val() == "<div><br></div>") {
                    //console.log("empty");
                    $("#validation-desc").removeAttr(this.hidden);
                    $("#validation-desc").css("color", "red");
                } else {
                    $("#validation-desc").attr(this.hidden);
                    $("#validation-desc").css("color", "black");
                }

                $("#SubCategoryName").attr("value", $("#sub-category option:selected").text());

                var tag = skill_input.value;
                var descval = $("#project-desc").val();
                var array = tag.split(",");

                //console.log("desc", descval);

                $.each(array, function (i) {
                    //console.log(array[i]);
                });

            });
        });

        


    </script>
</body>
</html>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
