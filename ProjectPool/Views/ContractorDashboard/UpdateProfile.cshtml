@model ProjectPool.Models.Contractor

@{
    ViewData["Title"] = "Update Profile Information | ProjectPooL.";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- CSS -->
    @*<link rel="stylesheet" href="~/css/NavProfile.css">*@
    <link rel="stylesheet" href="~/css/texteditor/site.css">
    <link rel="stylesheet" href="~/css/texteditor/richtext.min.css">
    <link rel="stylesheet" href="~/css/UpdateProfile.css">
    <link rel="stylesheet" href="~/css/taginput/tagify.css">

    <!-- Font -->
    <link href='https://fonts.googleapis.com/css?family=Jost' rel='stylesheet'>
    <!-- Icon -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" referrerpolicy="no-referrer">
    <!-- <link rel="stylesheet" href="//use.fontawesome.com/releases/v5.0.7/css/all.css"> -->


    <style>
    </style>
</head>
<body>
    @*@toastr.success('Success')*@

    <div class="content">
        <div class="col-12">
            <div class="text-black font-weight-bold page-title">Update Profile</div>
        </div>
        <br />
        @*@using (Html.BeginForm("CreateProject", "ProjectController"))
            {*@
        <form asp-action="EditActiveProject1">
            @Html.ValidationSummary(true)



            <div class="page col-12">
                <h3 class="sub-page-title">Personal Details</h3>
                <hr />
                <div class="field">
                    <label asp-for="FirstName" class="label"></label>
                    @Html.TextBoxFor(model => model.FirstName, new { type = "text", @class = "text-input" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "validation" })

                    @*<span class="validation-desc" style="float: left;">asd</span>*@
                </div>
                <div class="field">
                    <label asp-for="LastName" class="label"></label>
                    @Html.TextBoxFor(model => model.LastName, new { type = "text", @class = "text-input" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "validation" })
                    @*<span class="validation-desc" style="float: left;">asd</span>*@
                </div>
                <div class="field">
                    <label asp-for="Phone" class="label"></label>
                    @Html.TextBoxFor(model => model.Phone, new { type = "number", @class = "text-input" })
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
                <div class="field">
                    <label asp-for="State" class="label"></label>
                    @{
                        List<SelectListItem>
                        StatelistItems = new List<SelectListItem>();
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Perlis",
                            Value = "Perlis"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Kedah",
                            Value = "Kedah"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Pulau Pinang",
                            Value = "Pulau Pinang"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Perak",
                            Value = "Perak"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Selangor",
                            Value = "Selangor"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Negeri Sembilan",
                            Value = "Negeri Sembilan"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Melaka",
                            Value = "Melaka"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Johor",
                            Value = "Johor"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Terengganu",
                            Value = "Terengganu"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Kelantan",
                            Value = "Kelantan"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Pahang",
                            Value = "Pahang"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Kuala Lumpur",
                            Value = "Kuala Lumpur"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Labuan",
                            Value = "Labuan"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Putrajaya",
                            Value = "Putrajaya"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Sabah",
                            Value = "Sabah"
                        });
                        StatelistItems.Add(new SelectListItem
                        {
                            Text = "Sarawak",
                            Value = "Sarawak"
                        });
                    }
                    @Html.DropDownListFor(model => model.State, StatelistItems, "-- Select State --", new { @class = "list-item", @id = "state" })
                    <span asp-validation-for="State" class="text-danger"></span>
                </div>

                <div class="field">
                    <label asp-for="Country" class="label"></label>
                    @{
                        List<SelectListItem>
                        CountrylistItems = new List<SelectListItem>();
                        CountrylistItems.Add(new SelectListItem
                        {
                            Text = "Malaysia",
                            Value = "Malaysia"
                        });
                    }
                    @Html.DropDownListFor(model => model.Country, CountrylistItems, new { @class = "list-item", @id = "country" })
                    <span asp-validation-for="Country" class="text-danger"></span>
                </div>

                <br />
                <h3>Additional Details</h3>
                <hr />
                <div class="field">
                    <label asp-for="ProfileDesc" class="label"></label>
                    @Html.TextAreaFor(model => model.ProfileDesc, new { @id = "profile-desc", @class = "desc" })
                    @*<textarea asp-for="Description" cols="2" id="project-desc" required></textarea>*@
                    @Html.ValidationMessageFor(model => model.ProfileDesc, "", new { @class = "validation" })
                    <span hidden class="validation-desc" style="float: left;">This field is required</span>
                    <div id="counter" style="float: right;">
                        <span id="current-title">0</span>
                        <span id="maximum-title">/ 300</span>
                    </div>
                </div>
                <div class="field">
                    <div class="label">Category</div>
                    @{
                        List<SelectListItem>
                            CatlistItems = new List<SelectListItem>
                                ();
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Programming & Tech",
                            Value = "1"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Graphic & Design",
                            Value = "2"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Sales & Marketing",
                            Value = "3"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Video & Animation",
                            Value = "4"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Writing & Translation",
                            Value = "5"
                        });
                    }

                    @Html.DropDownListFor(model => model.CategoryID, CatlistItems, "-- Select Category --", new { @id = "main-category", @class = "category" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "validation" })
                    @*<span class="validation-cat" style="float: left;">asd</span>*@
                </div>

                <div class="field">
                    <div class="label">Sub-Category</div>
                    <select class="category" id="sub-category">
                        <option value="">-- Select Sub Category --</option>
                    </select>

                    <!--Programming-->
                    <select class="category hide-submenu" id="sub-category-1" hidden>
                        <option value="Website">Website</option>
                        <option value="Mobile App">Mobile App</option>
                        <option value="Web mobile">Web mobile</option>
                        <option value="Wordpress">Wordpress</option>
                        <option value="Game development">Game development</option>
                    </select>
                    <!--Graphic-->
                    <select class="category hide-submenu" id="sub-category-2" hidden>
                        <option value="Illustration">Illustration</option>
                        <option value="Logo design">Logo design</option>
                        <option value="Card design">Card design</option>
                        <option value="UI/UX design">UI/UX design</option>
                        <option value="Fonts & Typography">Fonts & Typography</option>
                    </select>
                    <!--sales marketing-->
                    <select class="category hide-submenu" id="sub-category-3" hidden>
                        <option value="Data entry">Data entry</option>
                        <option value="Social media campaign">Social media campaign</option>
                        <option value="Adwords campaign">Adwords campaign</option>
                        <option value="Other">Other</option>
                    </select>
                    <!--video animation-->
                    <select class="category hide-submenu" id="sub-category-4" hidden>
                        <option value="Ads & Commercial">Ads & Commercial</option>
                        <option value="Video editing">Video editing</option>
                        <option value="Animated GIFs">Animated GIFs</option>
                        <option value="Logo animation">Logo animation</option>
                        <option value="Character animation">Character animation</option>
                    </select>
                    <!--writing -->
                    <select class="category hide-submenu" id="sub-category-5" hidden>
                        <option value="Translation">Translation</option>
                        <option value="Book Writing">Book Writing</option>
                        <option value="Scriptwriting">Scriptwriting</option>
                        <option value="Content writing">Content writing</option>
                        <option value="Article and blog posts">Article and blog posts</option>
                    </select>

                    @*<select asp-for="SubCategoryName" class="category" id="sub-category">
                            <option value="">Select Sub Category</option>
                        </select>*@
                    <input hidden id="SubCategoryName" name="SubCategoryName" asp-for="SubCategory" />
                    @*@Html.HiddenFor(model => model.SubCategoryName)*@
                    @Html.ValidationMessageFor(model => model.SubCategory, "", new { @class = "validation" })
                </div>
                <div class="field">
                    <div class="label">Required Skill</div>
                    @Html.TextAreaFor(model => model.Skill, new { @class = "skill-tag" })
                    @*<textarea class="skill-tag">CSS, HTML, PHP, jQuery</textarea>*@
                    @Html.ValidationMessageFor(model => model.Skill, "", new { @class = "validation" })
                </div>
                <div class="field">
                    <div class="label"> Required Language</div>
                    @Html.TextAreaFor(model => model.Language, new { @class = "language-tag" })
                    @*<textarea class="language-tag">English, Chinese</textarea>*@
                    @Html.ValidationMessageFor(model => model.Language, "", new { @class = "validation" })
                </div>

                <br /><br />
                <div class="field btns">
                    @*<button class="prev-5 prev" onclick="location.href='@Url.Action("EmpActive", "EmployerDashboard" )'">Back to List</button>*@
                    <button class="Save">Save</button>
                </div>
                <br />
            </div>
        </form>
        <div>
            <a asp-controller="Dashboard" asp-action="ConDashboard">Back to List</a>
        </div>
        @*}*@
    </div>



    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/script/tagify.min.js"></script>
    <script>

        $(function () {
            //toastr.options = {
            //    "closeButton": true,
            //    "debug": false,
            //    "newestOnTop": false,
            //    "progressBar": true,
            //    "positionClass": "toast-top-right",
            //    "preventDuplicates": false,
            //    "onclick": null,
            //    "showDuration": "200",
            //    "hideDuration": "1000",
            //    "timeOut": "3000",
            //    "extendedTimeOut": "1000",
            //    "showEasing": "swing",
            //    "hideEasing": "linear",
            //    "showMethod": "fadeIn",
            //    "hideMethod": "fadeOut"
            //};

            $("#profile-desc").keyup(function () {

                var character = $(this).val();
                var withOutSpace = character.replace(/\s+/g, '').length,
                    current = $('#current-title');
                maximum = $('#maximum-title');
                theCount = $('#the-count');



                current.text(withOutSpace);

                if (withOutSpace > 299) {
                    maximum.css('color', '#841c1c');
                    current.css('color', '#841c1c');
                }
                else {
                    current.css('color', 'black');
                    maximum.css('color', 'black');
                }

            });

            //Tag input
            var skill_input = document.querySelector('.skill-tag')
            var arr = ["Javascript", "JQuery", "PHP", "MySQL", "Ruby", "HTML ", "CSS", "C++", "Java", "Python", "React", "C#", "APA MySQL"];
            var tagify = new Tagify(skill_input, {
                enforceWhitelist: true,
                maxTags: 7,
                editTags: false,
                whitelist: arr,
                originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(',')
            })


            var lang_input = document.querySelector('.language-tag');
            var desc = document.querySelector('#project-desc');

            var tagify = new Tagify(lang_input, {
                enforceWhitelist: true,
                maxTags: 3,
                editTags: false,
                whitelist: ["English", "Chinese", "Malay", "Japanese", "Korean", "Tamil", "Spanish", "Hokkien"],
                originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(',')
            })


            var num = $('#main-category').val();
            if (num != "") {
                $("#sub-category").hide();
                $("#sub-category-" + num).show();
                var value = $("#SubCategoryName").val();
                $("#sub-category-" + num).val(value).change();
                $(".hide-submenu").find(":selected").attr("selected", "selected");
                console.log("num:" + num);
            }
            //console.log("num:"+ num);



            $('#main-category').change(function () {
                var id = $('#main-category').val();
                $(".hide-submenu").hide();
                $("#sub-category").hide();
                $("#sub-category-" + id).show();

                console.log(id);
                console.log("clicked");

                if ($("#main-category option:selected").val() == '') {
                    $("#sub-category").show();
                }

                $("#sub-category-" + id).change(function () {
                    console.log("changed");
                    $("#SubCategoryName").val($("#sub-category-" + id + " option:selected").text());
                    console.log($("#sub-category-" + id + " option:selected").text())
                    $('.hide-submenu option[selected]').removeAttr("selected");
                    $(".hide-submenu").find(":selected").attr("selected", "selected");
                    //$("#sub-category").attr("value", $("#sub-category option:selected").text());
                })

            });

            $("#sub-category-" + num).change(function () {
                //console.log("changed")
                $("#SubCategoryName").val($("#sub-category-" + num + " option:selected").text());
                //console.log($("#sub-category-" + num + " option:selected").text())
                $('.hide-submenu option[selected]').removeAttr("selected");
                $(".hide-submenu").find(":selected").attr("selected", "selected");
                //$("#sub-category").attr("value", $("#sub-category option:selected").text());
            })
        })


    </script>
</body>
</html>
