@model ProjectPool.Models.CreateProjectModel

@{
    ViewData["Title"] = "Create Project Post";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <!-- CSS -->
    <link rel="stylesheet" href="~/css/texteditor/site.css">
    <link rel="stylesheet" href="~/css/texteditor/richtext.min.css">
    <link rel="stylesheet" href="~/css/CreateProject.css">
    <link rel="stylesheet" href="~/css/taginput/tagify.css">

    <!-- Font -->
    <link href='https://fonts.googleapis.com/css?family=Jost' rel='stylesheet'>
    <!-- Icon -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" referrerpolicy="no-referrer">
    <!-- <link rel="stylesheet" href="//use.fontawesome.com/releases/v5.0.7/css/all.css"> -->


    <style>
    </style>
</head>
<body>


    @*<div class="main-body">*@
    <div class="content">
        <div class="col-12">
            <div class="text-black font-weight-bold create-project">Create Project</div>
        </div>
        @*@using (Html.BeginForm("CreateProject", "ProjectController"))
            {*@
        <form asp-action="CreateProject" method="post">
            @Html.ValidationSummary(true)
            <div class="page col-12">
                <div class="field title">
                    <div class="label">Project Title</div>
                    @Html.TextAreaFor(model => model.Title, new { @id = "project-textarea", maxlength = 50 })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "validation" })
                    @*<textarea asp-for="Title" maxlength="80" cols="2" id="project-textarea"></textarea>*@
                    @*<span class="validation-title" style="float: left;">This field is required</span>*@
                    <div id="counter" style="float: right;">
                        <span id="current-title">0</span>
                        <span id="maximum-title">/ 50</span>
                    </div>
                </div>
                <br>
                <div class="field title">
                    <div class="label">Brief Description</div>
                    @Html.TextAreaFor(model => model.Description, new { @id = "desc-textarea", maxlength = 300 })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "validation" })
                    @*<textarea asp-for="Title" maxlength="80" cols="2" id="project-textarea"></textarea>*@
                    @*<span class="validation-title" style="float: left;">This field is required</span>*@
                    <div id="counter-desc" style="float: right;">
                        <span id="current-desc">0</span>
                        <span id="maximum-desc">/ 300</span>
                    </div>
                </div>
                <br />
                <div class="field">
                    <div class="label">Project Scope</div>
                    @Html.TextAreaFor(model => model.Scope, new { @id = "project-scope" })
                    @Html.ValidationMessageFor(model => model.Scope, "", new { @class = "validation" })
                <span hidden class="validation-desc" style="float: left;">This field is required</span>
                </div>
                <br />
                <div class="field">
                    <div class="label">Category</div>
                    @{
                        List<SelectListItem> CatlistItems= new List<SelectListItem>();
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Programming & Tech",
                            Value = "1"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Graphic & Design",
                            Value = "2"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Sales & Marketing",
                            Value = "3"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Video & Animation",
                            Value = "4"
                        });
                        CatlistItems.Add(new SelectListItem
                        {
                            Text = "Writing & Translation",
                            Value = "5"
                        });
                    }

                    @Html.DropDownListFor(model => model.CategoryID, CatlistItems, "-- Select Category --", new { @id = "main-category", @class = "category" })                      
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "validation" })
                    @*<span class="validation-cat" style="float: left;">asd</span>*@
                </div>
                <br>
                <div class="field">
                    <div class="label">Sub-Category</div>
                    <select class="category" id="sub-category">
                        <option value="">-- Select Sub Category --</option>
                    </select>

                    <!--Programming-->
                    <select disabled class="category hide-submenu" id="sub-category-1" hidden>
                        <option disabled selected value="">-- Select Sub Category --</option>
                        <option value="Website">Website</option>
                        <option value="Mobile App">Mobile App</option>
                        <option value="Web mobile">Web mobile</option>
                        <option value="Wordpress">Wordpress</option>
                        <option value="Game development">Game development</option>
                    </select>
                    <!--Graphic-->
                    <select disabled class="category hide-submenu" id="sub-category-2" hidden>
                        <option disabled selected value="">-- Select Sub Category --</option>
                        <option value="Illustration">Illustration</option>
                        <option value="Logo design">Logo design</option>
                        <option value="Card design">Card design</option>
                        <option value="UI/UX design">UI/UX design</option>
                        <option value="Fonts & Typography">Fonts & Typography</option>
                    </select>
                    <!--sales marketing-->
                    <select disabled class="category hide-submenu" id="sub-category-3" hidden>
                        <option disabled selected value="">-- Select Sub Category --</option>
                        <option value="Data entry">Data entry</option>
                        <option value="Social media campaign">Social media campaign</option>
                        <option value="Adwords campaign">Adwords campaign</option>
                        <option value="Other">Other</option>
                    </select>
                    <!--video animation-->
                    <select disabled class="category hide-submenu" id="sub-category-4" hidden>
                        <option disabled selected value="">-- Select Sub Category --</option>
                        <option value="Ads & Commercial">Ads & Commercial</option>
                        <option value="Video editing">Video editing</option>
                        <option value="Animated GIFs">Animated GIFs</option>
                        <option value="Logo animation">Logo animation</option>
                        <option value="Character animation">Character animation</option>
                    </select>
                    <!--writing -->
                    <select disabled class="category hide-submenu" id="sub-category-5" hidden>
                        <option disabled selected value="">-- Select Sub Category --</option>
                        <option value="Translation">Translation</option>
                        <option value="Book Writing">Book Writing</option>
                        <option value="Scriptwriting">Scriptwriting</option>
                        <option value="Content writing">Content writing</option>
                        <option value="Article and blog posts">Article and blog posts</option>
                    </select>

                    @*<select asp-for="SubCategoryName" class="category" id="sub-category">
            <option value="">Select Sub Category</option>
        </select>*@
                    <input hidden id="SubCategoryName" name="SubCategoryName" asp-for="SubCategoryName" />
                    @*@Html.HiddenFor(model => model.SubCategoryName)*@
                    @Html.ValidationMessageFor(model => model.SubCategoryName, "", new { @class = "validation" })
                </div>
                <br>
                <div class="field">
                    <div class="label">Project Duration</div>
                    <div class="duration">
                        @{
                            List<SelectListItem> DurationlistItems = new List<SelectListItem>();
                            DurationlistItems.Add(new SelectListItem
                            {
                                Text = "0-3 months",
                                Value = "0 - 3 months"
                            });
                            DurationlistItems.Add(new SelectListItem
                            {
                                Text = "3-6 months",
                                Value = "3 - 6 months"
                            });
                            DurationlistItems.Add(new SelectListItem
                            {
                                Text = "6-12 months",
                                Value = "6 - 12 months"
                            });
                            DurationlistItems.Add(new SelectListItem
                            {
                                Text = "Not Specified",
                                Value = "Not Specified"
                            });
                        }
                        @Html.DropDownListFor(model => model.Duration, DurationlistItems, "-- Select Duration --", new { @id = "duration", @class = "category" })
                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "validation" })

                    </div>

                </div>
                <br>
                <div class="field">
                    <div class="label">Required Skill</div>
                    @Html.TextAreaFor(model => model.Skill, new { @class = "skill-tag" })
                    @*<textarea class="skill-tag">CSS, HTML, PHP, jQuery</textarea>*@
                    @Html.ValidationMessageFor(model => model.Skill, "", new { @class = "validation" })
                </div>
                <div class="field">
                    <div class="label"> Required Language</div>
                    @Html.TextAreaFor(model => model.Language, new { @class = "language-tag" })
                    @*<textarea class="language-tag">English, Chinese</textarea>*@
                    @Html.ValidationMessageFor(model => model.Language, "", new { @class = "validation" })
                </div>
                <div class="field">
                    <div class="label">Project Cost (RM)</div>
                    @Html.TextBoxFor(model => model.Cost, new { type = "number", @class = "project-cost" })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "validation" })
                    @*<span class="validation-desc" style="float: left;">asd</span>*@
                </div>
                <br /><br />
                <div class="field btns">
                    <button class="prev-5 prev" onclick="history.back()">Cancel</button>
                    <button asp-controller="Project" asp-action="CreateProject" class="submit">Submit</button>
                </div>
            </div>
        </form>

        @*}*@
    </div>

    @*</div>*@

    <!-- Script -->
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    @*<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>*@

    <script src="~/script/jquery.richtext.js"></script>
    <script src="~/script/tagify.min.js"></script>
    <script>

        // $(document).ready(function() {
        $("#project-scope").richText({
            maxlength: 800,
            height: 200,
            leftAlign: false,
            centerAlign: false,
            rightAlign: false,
            justify: false,
            heading: false,
            fonts: false,
            fontColor: false,
            fontSize: false,
            imageUpload: false,
            fileUpload: false,
            videoEmbed: false,
            urls: false,
            table: false,
            removeStyles: false,
            preview: false,
            placeholder: 'Briefly describe your project...',
        });

        // });

        $("#project-textarea").keyup(function () {

            var character = $(this).val();
            var withOutSpace = character.replace(/\s+/g, '').length,
                current = $('#current-title');
            var length = character.length;
            maximum = $('#maximum-title');
            theCount = $('#the-count');



            current.text(length);

            if (length > 49) {
                maximum.css('color', '#841c1c');
                current.css('color', '#841c1c');
            }
            else {
                current.css('color', 'black');
                maximum.css('color', 'black');
            }

        });

        $("#desc-textarea").keyup(function () {

            var character = $(this).val();
            var withOutSpace = character.replace(/\s+/g, '').length,
                current = $('#current-desc');
            var length = character.length;
            maximum = $('#maximum-desc');
            theCount = $('#the-count');



            current.text(length);

            if (length > 299) {
                maximum.css('color', '#841c1c');
                current.css('color', '#841c1c');
            }
            else {
                current.css('color', 'black');
                maximum.css('color', 'black');
            }

        });

        //$(".firstNext").on("click", function () {
        //    console.log("click");
        //    if ($("#project-textarea").val() == "" || $("#project-textarea").val() == null) {
        //        console.log("empty");
        //        $("#validation-title").removeAttr("hidden");
        //        $("#validation-title").css("color", "red");
        //    } else {
        //        $("#validation-title").attr("hidden");
        //        $("#validation-title").css("color", "black");
        //    }
        //});


        //Tag input
        var skill_input = document.querySelector('.skill-tag')
        var arr = [ "Javascript", "JQuery", "PHP", "MySQL", "Ruby", "HTML ", "CSS", "C++", "Java", "Python", "React", "C#", "APA MySQL"];
        var tagify = new Tagify(skill_input, {
            enforceWhitelist: true,
            maxTags: 7,
            editTags: false,
            whitelist: arr,
            originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(',')
        })

        
        var lang_input = document.querySelector('.language-tag');
        var desc = document.querySelector('#project-desc');

        var tagify = new Tagify(lang_input, {
            enforceWhitelist: true,
            maxTags: 3,
            editTags: false,
            whitelist: ["English", "Chinese", "Malay", "Japanese", "Korean", "Tamil", "Spanish", "Hokkien"],
            originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(',')
        })

        //Sub category change based on category
        $(function () {
            var subjectObject = {
                "0": [
                    "-- Select Sub Category --"
                ],
                "1": [
                    "Website",
                    "Mobile App",
                    "Web mobile",
                    "Wordpress",
                    "Game development"
                ],
                "2": [
                    "Illustration",
                    "Logo design",
                    "Card design",
                    "UI / UX design",
                    "Fonts & Typography"
                ],
                "3": [
                    "Data entry",
                    "Social media campaign",
                    "Adwords campaign",
                    "Other"
                ],
                "4": [
                    "Ads & commercial",
                    "Video editing",
                    "Animated GIFs",
                    "Logo animation",
                    "Character animation"
                ],
                "5": [
                    "Translation",
                    "Book Writing",
                    "Scriptwriting",
                    "Content writing",
                    "Article and blog posts"
                ]
            };

            //$('#main-category').change(function () {
            //    var OrderType = $(this).val()
            //    var CurrencyType = subjectObject[OrderType] || [];

            //    var html = $.map(CurrencyType, function (cnt) {
            //        return '<option value="' + OrderType + '">' + cnt + '</option>'
            //    }).join('');

            //    $('#sub-category').html(html)
            //});

            //$(".hide-submenu").change(function () {
            //    console.log("changed")
            //    $("#SubCategoryName").attr("value", $(".hide-submenu option:selected").text());
            //    console.log($(".hide-submenu option:selected").text())
            //    $('.hide-submenu option[selected]').removeAttr("selected");
            //    $(".hide-submenu").find(":selected").attr("selected", "selected");
            //    //$("#sub-category").attr("value", $("#sub-category option:selected").text());
            //})

            $('#main-category').change(function () {
                var num = this.value;
                $(".hide-submenu").hide();
                $("#sub-category").hide();
                $("#sub-category-" + num).show();

                if ($("#main-category option:selected").val() == '') {
                    $("#sub-category").show();
                }

                $("#sub-category-" + num).change(function () {
                    console.log("changed")
                    $("#SubCategoryName").val($("#sub-category-" + num +" option:selected").text());
                    console.log($("#sub-category-" + num  + " option:selected").text())
                    $('.hide-submenu option[selected]').removeAttr("selected");
                    $(".hide-submenu").find(":selected").attr("selected", "selected");
                    //$("#sub-category").attr("value", $("#sub-category option:selected").text());
                })
            });
        })

        $(".submit").on("click", function () {
            if ($("#project-textarea").val() == "" || $("#project-textarea").val() == null || $("#project-textarea").val() == "<div><br></div>") {
                console.log("empty");
                $("#validation-desc").removeAttr(this.hidden);
                $("#validation-desc").css("color", "red");
            } else {
                $("#validation-desc").attr(this.hidden);
                $("#validation-desc").css("color", "black");
            }

            $("#SubCategoryName").attr("value", $("#sub-category option:selected").text());

            var tag = skill_input.value;
            var descval = $("#project-desc").val();
            var array = tag.split(",");

            console.log("desc", descval);

            $.each(array, function (i) {
                console.log(array[i]);
            });

        });


    </script>
</body>
</html>